{
	"info": {
		"_postman_id": "10d17908-01a7-4821-8927-150a74babe9a",
		"name": "Formacao",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Criar Utilizador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"teste\",\r\n    \"password\" : \"teste\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "authuser-cicd:8081/user/register",
					"host": [
						"authuser-cicd"
					],
					"port": "8081",
					"path": [
						"user",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type header is text/plain\", () => {\r",
							"pm.expect(pm.response.headers.get('Content-Type')).to.include('text/plain');\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", () => {\r",
							"pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"//set variable with token to be used in later interactions\r",
							"pm.collectionVariables.set(\"token\", responseBody);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"teste\",\r\n    \"password\" : \"teste\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "authuser-cicd:8081/user/login",
					"host": [
						"authuser-cicd"
					],
					"port": "8081",
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"teste\",\r\n    \"description\" : \"zÃ©\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "todolist_cicd:8082/todolist",
					"host": [
						"todolist_cicd"
					],
					"port": "8082",
					"path": [
						"todolist"
					]
				}
			},
			"response": []
		},
		{
			"name": "04 get Todo Teste",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "todolist_cicd:8082/todolist/teste",
					"host": [
						"todolist_cicd"
					],
					"port": "8082",
					"path": [
						"todolist",
						"teste"
					]
				}
			},
			"response": []
		},
		{
			"name": "05 - RabbitMQ Check Existing Message",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 9000);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test assume an empty database and empty queue\r",
							"//convert response to json\r",
							"let jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"//check if json is an array\r",
							"pm.test(\"Queues status\", () => {\r",
							"pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"//check if any queue has 1 message\r",
							"pm.test(\"The notification_response queue contains exactly 1 message\", () => {\r",
							"var res = jsonData.find(item => item.backing_queue_status.len === 1)\r",
							"pm.expect(typeof res !== \"undefined\").to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "guest",
							"type": "string"
						},
						{
							"key": "username",
							"value": "guest",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://rabbit-cicd:15672/api/queues",
					"protocol": "http",
					"host": [
						"rabbit-cicd"
					],
					"port": "15672",
					"path": [
						"api",
						"queues"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}
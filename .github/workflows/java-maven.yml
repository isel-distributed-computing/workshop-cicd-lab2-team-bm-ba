name: Java CI with Maven
on:
  push:
    branches:
     - 'main'

jobs:
  build-auth-service:
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    strategy:
      matrix:
        jdk: [17]
        os: [ubuntu-18.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.jdk }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build Auth Service with Maven
      run: |
        cd authusers
        mvn -B package
  
  build-notifications:
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    strategy:
      matrix:
        jdk: [17]
        os: [ubuntu-18.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.jdk }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build Notification with Maven
      run: |
        cd notifications
        mvn -B package
      
  build-todolist:
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    strategy:
      matrix:
        jdk: [17]
        os: [ubuntu-18.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.jdk }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build TodoList with Maven
      run: |
        cd todolist
        mvn -B package

  publish-docker-image:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    runs-on: ubuntu-18.04
    needs: build-auth-service
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta-auth
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}/authusers
     
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: authusers
          file: authusers/Dockerfile
          push: true
          tags: ${{ steps.meta-auth.outputs.tags }}
          labels: ${{ steps.meta-auth.outputs.labels }}
     
     
     
     
     
     
     
     
